name: CI

on:
  push:
    branches:
      - master

concurrency:
  group: ${{ github.workflow }}-${{ github.sha }}
  cancel-in-progress: true

# Define the aws account credentials and the job level
env:
  #define the logging level
  TF_LOG: "verbose"
  AWS_ACCESS_KEY_ID: ${{secrets.AWS_ACCESS_KEY}}
  AWS_SECRECT_KEY: ${{secrets.AWS_SECRECT_KEY}}
  AWS_REGION: "us_east_1"
  CLUSTER_NAME: ${{vars.CLUSTER_NAME}}
  VPC_ID: ${{vars.VPC_ID}}
  SUBNET_IDS: ${{vars.SUBNET_IDS}}
  BUCKET_NAME: ${{secrets.S3_BUCKET_NAME}}
  # my Option for separate the stage file
  TF_ENV: "dev"

jobs:
  #job ids
  Terraform:
    name: "Terraform workflow"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # AWS Credential setup
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4.1.0
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY}}
          aws-secret-access-key: ${{ secrets.AWS_SECRECT_KEY }}
          aws-region: $AWS_REGION

      #Set up Terraform on the runner, be the same version with local
      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: "1.10.1"
        # Terraform init cmd from the local
      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=$BUCKET_NAME" \
            -backend-config="key=envs/${TF_ENV}/terraform.tfstate" \
            -backend-config="region=$AWS_REGION" \

        #terraform plan and output the plan stage
      - name: Terraform Plan
        id: plan
        run: |
          terraform plan \
          -out=tfplan \
          -var "cluster_name=$CLUSTER_NAME" \
          -var "region=$AWS_REGION" \
          -var "vpc_id=$VPC_ID" \
          -var "control_plane_subnet_ids=$SUBNET_IDS"

      - name: Terraform apply change
        if: steps.plan.outputs.summary !='No changes. Everything is up to date'
        run: terraform apply --auto-approve tfpaln
